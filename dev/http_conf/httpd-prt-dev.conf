Listen 5005 https

User s_tlstcs
Group u_051515

ServerName isidash.shell.com

CustomLog logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
LogLevel info

SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog

SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout  300

SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin

SSLCryptoDevice builtin
SSLProtocol all -SSLv2 -SSLv3
SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA
#SSLCertificateFile /glb/hou/gf.siti/tcs_dev_datastore/grafanaproxy/certs/isidash.shell.com.cer
#SSLCertificateKeyFile /glb/hou/gf.siti/tcs_dev_datastore/grafanaproxy/certs/isidash.shell.com.key
SSLCertificateFile /glb/home/s_tlstcs/permission_request_app/dev/http_conf/certs/2019/isidash.shell.com.cer
SSLCertificateKeyFile /glb/home/s_tlstcs/permission_request_app/dev/http_conf/certs/2019/isidash.shell.com.key
#SSLCertificateFile /etc/pki/grafana/isidash.shell.com.cer
#SSLCertificateKeyFile /etc/pki/grafana/isidash.shell.com.key
#SSLCertificateChainFile /etc/pki/tls/certs/server-chain.crt
#SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt

#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>

BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

<VirtualHost *:5005>

#SSLEngine on

LimitInternalRecursion 10
SSLEngine on

ErrorLog logs/urt.error.log
TransferLog logs/urt.access.log

ProxyPreserveHost Off
ProxyRequests Off
ProxyTimeout 30
ProxyPass "/doc/" "http://172.23.0.2:80/"
ProxyPassReverse "/doc/" "http://172.23.0.2:80/"
ProxyPass "/prt-dev/" "http://172.23.0.2:80/prt-dev/"
ProxyPassReverse "/prt-dev/" "http://172.23.0.2:80/prt-dev/"
# TODO: make it work with the entry in /etc/hosts ## UPDATE: apache does not use /etc/hosts at all...
# TODO: add a rewrte rule so a trailing / is added to the browser request

<Proxy *>

# Authentication session
   AuthType Kerberos
   AuthName "Grafana proxy login"
   KrbMethodNegotiate On        # For passwordless auth
   #KrbMethodNegotiate off        # For password auth
   #KrbMethodK5Passwd on         # For auth with passwd
   KrbMethodK5Passwd Off         # For auth without passwd
   #KrbAuthoritative off         # Docs say only use if really know what you are doing....
   #KrbVerifyKDC on
   KrbServiceName HTTP
   KrbAuthRealms LINUX.SHELL.COM EUROPE.SHELL.COM AMERICAS.SHELL.COM ASIA-PAC.SHELL.COM
   #KrbAuthRealms LINUX.SHELL.COM EUROPE.SHELL.COM
   # Krb5Keytab on the automount path did not work, so using a copy in /etc
   #Krb5Keytab /etc/pki/grafana/isidash.keytab
   #Krb5Keytab /glb/am/gf/siti/data/hou_iiq_datastore/isidiprd/etc/proxycfg/tlsmon.americas.keytab
   Krb5Keytab /glb/home/s_tlstcs/permission_request_app/dev/http_conf/isidash.shell.com.keytab
   KrbSaveCredentials off
   #KrbSaveCredentials on # but did not work against excessive access to the auth server
   #KrbLocalUserMapping on      # removes the @LINUX.SHELL.COM part of the name

   # List all allowed users here. They will get the default Grafana role.
   # Unfortunately, an Include statement for a user-file is not allowed here.
   
   #Include /glb/home/s_tlstcs/permission_request_app/dev/http_conf/prt-user-dev.conf
   # Require user Nishant.Nikhil@ASIA-PAC.SHELL.COM
   # Require user Vinay.Nair@ASIA-PAC.SHELL.COM
   Require valid-user
  RequestHeader unset X-Forwarded-User
  RewriteEngine On
  RewriteCond %{LA-U:REMOTE_USER} (.+)
  #RewriteRule .* - [E=RU:%1]
  # The No Subrequests (NS) addition below gets rid of many of these: "Request exceeded the limit of 10 subrequest nesting levels"
  RewriteRule .* - [E=RU:%1,NS]
  RequestHeader set X-WEBAUTH-LNXUSER "%{RU}e"

# tmp step, do not use:  RedirectMatch 403 ".*\/api\/datasources.*"

</Proxy>

</VirtualHost>

